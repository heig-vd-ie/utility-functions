Search.setIndex({"alltitles": {"Contents:": [[1, null]], "Example:": [[5, "example"]], "Examples:": [[6, "examples"]], "IE Utility Functions documentation": [[1, null]], "Utility Functions documentation": [[2, null]], "general_function": [[0, null]], "networkx_function": [[3, null]], "numpy_function": [[4, null]], "polars_function": [[5, null]], "polars_shapely_function": [[6, null]], "shapely_function": [[7, null]]}, "docnames": ["general_function", "index", "modules", "networkx_function", "numpy_function", "polars_function", "polars_shapely_function", "shapely_function"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["general_function.rst", "index.rst", "modules.rst", "networkx_function.rst", "numpy_function.rst", "polars_function.rst", "polars_shapely_function.rst", "shapely_function.rst"], "indexentries": {"add_buffer() (in module polars_shapely_function)": [[6, "polars_shapely_function.add_buffer", false]], "build_non_existing_dirs() (in module general_function)": [[0, "general_function.build_non_existing_dirs", false]], "calculate_line_length() (in module polars_shapely_function)": [[6, "polars_shapely_function.calculate_line_length", false]], "camel_to_snake() (in module general_function)": [[0, "general_function.camel_to_snake", false]], "cast_boolean() (in module polars_function)": [[5, "polars_function.cast_boolean", false]], "cast_float() (in module polars_function)": [[5, "polars_function.cast_float", false]], "cast_to_utc_timestamp() (in module polars_function)": [[5, "polars_function.cast_to_utc_timestamp", false]], "combine_shape() (in module polars_shapely_function)": [[6, "polars_shapely_function.combine_shape", false]], "concat_list_of_list() (in module polars_function)": [[5, "polars_function.concat_list_of_list", false]], "convert_list_to_string() (in module general_function)": [[0, "general_function.convert_list_to_string", false]], "cum_count_duplicates() (in module polars_function)": [[5, "polars_function.cum_count_duplicates", false]], "dict_to_duckdb() (in module general_function)": [[0, "general_function.dict_to_duckdb", false]], "dict_to_gpkg() (in module general_function)": [[0, "general_function.dict_to_gpkg", false]], "dictionary_key_filtering() (in module general_function)": [[0, "general_function.dictionary_key_filtering", false]], "digitize_col() (in module polars_function)": [[5, "polars_function.digitize_col", false]], "download_from_switch() (in module general_function)": [[0, "general_function.download_from_switch", false]], "duckdb_to_dict() (in module general_function)": [[0, "general_function.duckdb_to_dict", false]], "error_within_boundaries() (in module numpy_function)": [[4, "numpy_function.error_within_boundaries", false]], "explode_multipolygon() (in module shapely_function)": [[7, "shapely_function.explode_multipolygon", false]], "extract_archive() (in module general_function)": [[0, "general_function.extract_archive", false]], "find_closest_node_from_list() (in module shapely_function)": [[7, "shapely_function.find_closest_node_from_list", false]], "force_linestring_direction() (in module shapely_function)": [[7, "shapely_function.force_linestring_direction", false]], "force_linestring_direction_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.force_linestring_direction_col", false]], "general_function": [[0, "module-general_function", false]], "generate_and_connect_segment_from_linestring_list() (in module networkx_function)": [[3, "networkx_function.generate_and_connect_segment_from_linestring_list", false]], "generate_bfs_tree_with_edge_data() (in module networkx_function)": [[3, "networkx_function.generate_bfs_tree_with_edge_data", false]], "generate_linestring_from_coordinates_list() (in module polars_shapely_function)": [[6, "polars_shapely_function.generate_linestring_from_coordinates_list", false]], "generate_linestring_from_nearest_points_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.generate_linestring_from_nearest_points_col", false]], "generate_log() (in module general_function)": [[0, "general_function.generate_log", false]], "generate_nx_edge() (in module networkx_function)": [[3, "networkx_function.generate_nx_edge", false]], "generate_point_from_coordinates() (in module polars_shapely_function)": [[6, "polars_shapely_function.generate_point_from_coordinates", false]], "generate_random_uuid() (in module polars_function)": [[5, "polars_function.generate_random_uuid", false]], "generate_shortest_path_length_matrix() (in module networkx_function)": [[3, "networkx_function.generate_shortest_path_length_matrix", false]], "generate_tree_graph_from_edge_data() (in module networkx_function)": [[3, "networkx_function.generate_tree_graph_from_edge_data", false]], "generate_uuid() (in module general_function)": [[0, "general_function.generate_uuid", false]], "generate_uuid_col() (in module polars_function)": [[5, "polars_function.generate_uuid_col", false]], "generate_valid_polygon() (in module shapely_function)": [[7, "shapely_function.generate_valid_polygon", false]], "geoalchemy2_to_shape() (in module shapely_function)": [[7, "shapely_function.geoalchemy2_to_shape", false]], "geoalchemy2_to_shape_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.geoalchemy2_to_shape_col", false]], "geoalchemy2_to_wkt_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.geoalchemy2_to_wkt_col", false]], "geojson_to_wkt_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.geojson_to_wkt_col", false]], "get_all_edge_data() (in module networkx_function)": [[3, "networkx_function.get_all_edge_data", false]], "get_closest_point_from_multi_point() (in module shapely_function)": [[7, "shapely_function.get_closest_point_from_multi_point", false]], "get_connected_edges_data() (in module networkx_function)": [[3, "networkx_function.get_connected_edges_data", false]], "get_coordinates_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_coordinates_col", false]], "get_coordinates_list_from_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_coordinates_list_from_col", false]], "get_edge_data_from_node_list() (in module networkx_function)": [[3, "networkx_function.get_edge_data_from_node_list", false]], "get_edge_data_from_path() (in module networkx_function)": [[3, "networkx_function.get_edge_data_from_path", false]], "get_edge_data_list() (in module networkx_function)": [[3, "networkx_function.get_edge_data_list", false]], "get_edge_param_from_node_list() (in module networkx_function)": [[3, "networkx_function.get_edge_param_from_node_list", false]], "get_geometry_difference() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_geometry_difference", false]], "get_geometry_list() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_geometry_list", false]], "get_geometry_list_intersection() (in module shapely_function)": [[7, "shapely_function.get_geometry_list_intersection", false]], "get_linestring_boundaries_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_linestring_boundaries_col", false]], "get_linestring_from_point_list() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_linestring_from_point_list", false]], "get_linestring_list_boundary_intersection_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_linestring_list_boundary_intersection_col", false]], "get_meta_data_string() (in module polars_function)": [[5, "polars_function.get_meta_data_string", false]], "get_multigeometry_from_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_multigeometry_from_col", false]], "get_multilinestring_from_wkt_list() (in module shapely_function)": [[7, "shapely_function.get_multilinestring_from_wkt_list", false]], "get_multilinestring_from_wkt_list_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_multilinestring_from_wkt_list_col", false]], "get_multipoint_from_wkt_list() (in module shapely_function)": [[7, "shapely_function.get_multipoint_from_wkt_list", false]], "get_multipoint_from_wkt_list_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_multipoint_from_wkt_list_col", false]], "get_multipolygon_from_wkt_list() (in module shapely_function)": [[7, "shapely_function.get_multipolygon_from_wkt_list", false]], "get_nearest_point_within_distance() (in module shapely_function)": [[7, "shapely_function.get_nearest_point_within_distance", false]], "get_nearest_point_within_distance_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_nearest_point_within_distance_col", false]], "get_node_neighbor_edge_data() (in module networkx_function)": [[3, "networkx_function.get_node_neighbor_edge_data", false]], "get_point_list_centroid() (in module shapely_function)": [[7, "shapely_function.get_point_list_centroid", false]], "get_point_list_centroid_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_point_list_centroid_col", false]], "get_point_side() (in module shapely_function)": [[7, "shapely_function.get_point_side", false]], "get_polygon_centroid_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.get_polygon_centroid_col", false]], "get_polygon_multipoint_intersection() (in module shapely_function)": [[7, "shapely_function.get_polygon_multipoint_intersection", false]], "get_shortest_path_between_col() (in module networkx_function)": [[3, "networkx_function.get_shortest_path_between_col", false]], "get_shortest_path_dijkstra_col_from_multisource() (in module networkx_function)": [[3, "networkx_function.get_shortest_path_dijkstra_col_from_multisource", false]], "get_shortest_path_dijkstra_from_multisource() (in module networkx_function)": [[3, "networkx_function.get_shortest_path_dijkstra_from_multisource", false]], "get_shortest_path_edge_data() (in module networkx_function)": [[3, "networkx_function.get_shortest_path_edge_data", false]], "get_transfo_admittance() (in module polars_function)": [[5, "polars_function.get_transfo_admittance", false]], "get_transfo_conductance() (in module polars_function)": [[5, "polars_function.get_transfo_conductance", false]], "get_transfo_imaginary_component() (in module polars_function)": [[5, "polars_function.get_transfo_imaginary_component", false]], "get_transfo_impedance() (in module polars_function)": [[5, "polars_function.get_transfo_impedance", false]], "get_transfo_resistance() (in module polars_function)": [[5, "polars_function.get_transfo_resistance", false]], "get_valid_polygon_str() (in module shapely_function)": [[7, "shapely_function.get_valid_polygon_str", false]], "grid_bounds() (in module shapely_function)": [[7, "shapely_function.grid_bounds", false]], "initialize_output_file() (in module general_function)": [[0, "general_function.initialize_output_file", false]], "keep_only_duplicated_list() (in module polars_function)": [[5, "polars_function.keep_only_duplicated_list", false]], "keep_only_first_unique_list() (in module polars_function)": [[5, "polars_function.keep_only_first_unique_list", false]], "linear_interpolation_for_bound() (in module polars_function)": [[5, "polars_function.linear_interpolation_for_bound", false]], "linear_interpolation_using_cols() (in module polars_function)": [[5, "polars_function.linear_interpolation_using_cols", false]], "linestring_is_ring_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.linestring_is_ring_col", false]], "linestring_splitter() (in module shapely_function)": [[7, "shapely_function.linestring_splitter", false]], "linestring_splitter_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.linestring_splitter_col", false]], "list_to_list_of_tuple() (in module polars_function)": [[5, "polars_function.list_to_list_of_tuple", false]], "load_shape_from_geo_json() (in module shapely_function)": [[7, "shapely_function.load_shape_from_geo_json", false]], "merge_linestring_list() (in module polars_shapely_function)": [[6, "polars_shapely_function.merge_linestring_list", false]], "merge_multilinestring_creating_missing_segments() (in module shapely_function)": [[7, "shapely_function.merge_multilinestring_creating_missing_segments", false]], "modify_string() (in module general_function)": [[0, "general_function.modify_string", false]], "modify_string_col() (in module polars_function)": [[5, "polars_function.modify_string_col", false]], "module": [[0, "module-general_function", false], [3, "module-networkx_function", false], [4, "module-numpy_function", false], [5, "module-polars_function", false], [6, "module-polars_shapely_function", false], [7, "module-shapely_function", false]], "move_geometry() (in module shapely_function)": [[7, "shapely_function.move_geometry", false]], "move_geometry_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.move_geometry_col", false]], "multipoint_from_multilinestring() (in module shapely_function)": [[7, "shapely_function.multipoint_from_multilinestring", false]], "networkx_function": [[3, "module-networkx_function", false]], "numpy_function": [[4, "module-numpy_function", false]], "parse_date() (in module polars_function)": [[5, "polars_function.parse_date", false]], "parse_timestamp() (in module polars_function)": [[5, "polars_function.parse_timestamp", false]], "partition() (in module shapely_function)": [[7, "shapely_function.partition", false]], "pl_to_dict() (in module general_function)": [[0, "general_function.pl_to_dict", false]], "pl_to_dict_with_tuple() (in module general_function)": [[0, "general_function.pl_to_dict_with_tuple", false]], "point_list_to_linestring() (in module shapely_function)": [[7, "shapely_function.point_list_to_linestring", false]], "polars_function": [[5, "module-polars_function", false]], "polars_shapely_function": [[6, "module-polars_shapely_function", false]], "relative_error_within_boundaries() (in module numpy_function)": [[4, "numpy_function.relative_error_within_boundaries", false]], "remove_linestring_circle_from_multilinestring() (in module shapely_function)": [[7, "shapely_function.remove_linestring_circle_from_multilinestring", false]], "remove_z_coordinates() (in module shapely_function)": [[7, "shapely_function.remove_z_coordinates", false]], "replace_null_list() (in module polars_function)": [[5, "polars_function.replace_null_list", false]], "retrograde_multigeometry() (in module polars_shapely_function)": [[6, "polars_shapely_function.retrograde_multigeometry", false]], "scan_folder() (in module general_function)": [[0, "general_function.scan_folder", false]], "scan_switch_directory() (in module general_function)": [[0, "general_function.scan_switch_directory", false]], "segment_list_from_multilinestring() (in module shapely_function)": [[7, "shapely_function.segment_list_from_multilinestring", false]], "shape_coordinate_transformer() (in module shapely_function)": [[7, "shapely_function.shape_coordinate_transformer", false]], "shape_coordinate_transformer_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.shape_coordinate_transformer_col", false]], "shape_intersect_polygon() (in module polars_shapely_function)": [[6, "polars_shapely_function.shape_intersect_polygon", false]], "shape_intersect_shape_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.shape_intersect_shape_col", false]], "shape_list_to_wkt_list() (in module shapely_function)": [[7, "shapely_function.shape_list_to_wkt_list", false]], "shape_to_geoalchemy2() (in module shapely_function)": [[7, "shapely_function.shape_to_geoalchemy2", false]], "shape_to_geoalchemy2_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.shape_to_geoalchemy2_col", false]], "shape_to_wkt_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.shape_to_wkt_col", false]], "shapely_function": [[7, "module-shapely_function", false]], "simplify_linestring() (in module shapely_function)": [[7, "shapely_function.simplify_linestring", false]], "simplify_linestring_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.simplify_linestring_col", false]], "simplify_multilinestring() (in module shapely_function)": [[7, "shapely_function.simplify_multilinestring", false]], "simplify_multilinestring_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.simplify_multilinestring_col", false]], "snake_to_camel() (in module general_function)": [[0, "general_function.snake_to_camel", false]], "table_to_gpkg() (in module general_function)": [[0, "general_function.table_to_gpkg", false]], "wkt_list_to_shape_list() (in module shapely_function)": [[7, "shapely_function.wkt_list_to_shape_list", false]], "wkt_to_geoalchemy_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.wkt_to_geoalchemy_col", false]], "wkt_to_shape_col() (in module polars_shapely_function)": [[6, "polars_shapely_function.wkt_to_shape_col", false]]}, "objects": {"": [[0, 0, 0, "-", "general_function"], [3, 0, 0, "-", "networkx_function"], [4, 0, 0, "-", "numpy_function"], [5, 0, 0, "-", "polars_function"], [6, 0, 0, "-", "polars_shapely_function"], [7, 0, 0, "-", "shapely_function"]], "general_function": [[0, 1, 1, "", "build_non_existing_dirs"], [0, 1, 1, "", "camel_to_snake"], [0, 1, 1, "", "convert_list_to_string"], [0, 1, 1, "", "dict_to_duckdb"], [0, 1, 1, "", "dict_to_gpkg"], [0, 1, 1, "", "dictionary_key_filtering"], [0, 1, 1, "", "download_from_switch"], [0, 1, 1, "", "duckdb_to_dict"], [0, 1, 1, "", "extract_archive"], [0, 1, 1, "", "generate_log"], [0, 1, 1, "", "generate_uuid"], [0, 1, 1, "", "initialize_output_file"], [0, 1, 1, "", "modify_string"], [0, 1, 1, "", "pl_to_dict"], [0, 1, 1, "", "pl_to_dict_with_tuple"], [0, 1, 1, "", "scan_folder"], [0, 1, 1, "", "scan_switch_directory"], [0, 1, 1, "", "snake_to_camel"], [0, 1, 1, "", "table_to_gpkg"]], "networkx_function": [[3, 1, 1, "", "generate_and_connect_segment_from_linestring_list"], [3, 1, 1, "", "generate_bfs_tree_with_edge_data"], [3, 1, 1, "", "generate_nx_edge"], [3, 1, 1, "", "generate_shortest_path_length_matrix"], [3, 1, 1, "", "generate_tree_graph_from_edge_data"], [3, 1, 1, "", "get_all_edge_data"], [3, 1, 1, "", "get_connected_edges_data"], [3, 1, 1, "", "get_edge_data_from_node_list"], [3, 1, 1, "", "get_edge_data_from_path"], [3, 1, 1, "", "get_edge_data_list"], [3, 1, 1, "", "get_edge_param_from_node_list"], [3, 1, 1, "", "get_node_neighbor_edge_data"], [3, 1, 1, "", "get_shortest_path_between_col"], [3, 1, 1, "", "get_shortest_path_dijkstra_col_from_multisource"], [3, 1, 1, "", "get_shortest_path_dijkstra_from_multisource"], [3, 1, 1, "", "get_shortest_path_edge_data"]], "numpy_function": [[4, 1, 1, "", "error_within_boundaries"], [4, 1, 1, "", "relative_error_within_boundaries"]], "polars_function": [[5, 1, 1, "", "cast_boolean"], [5, 1, 1, "", "cast_float"], [5, 1, 1, "", "cast_to_utc_timestamp"], [5, 1, 1, "", "concat_list_of_list"], [5, 1, 1, "", "cum_count_duplicates"], [5, 1, 1, "", "digitize_col"], [5, 1, 1, "", "generate_random_uuid"], [5, 1, 1, "", "generate_uuid_col"], [5, 1, 1, "", "get_meta_data_string"], [5, 1, 1, "", "get_transfo_admittance"], [5, 1, 1, "", "get_transfo_conductance"], [5, 1, 1, "", "get_transfo_imaginary_component"], [5, 1, 1, "", "get_transfo_impedance"], [5, 1, 1, "", "get_transfo_resistance"], [5, 1, 1, "", "keep_only_duplicated_list"], [5, 1, 1, "", "keep_only_first_unique_list"], [5, 1, 1, "", "linear_interpolation_for_bound"], [5, 1, 1, "", "linear_interpolation_using_cols"], [5, 1, 1, "", "list_to_list_of_tuple"], [5, 1, 1, "", "modify_string_col"], [5, 1, 1, "", "parse_date"], [5, 1, 1, "", "parse_timestamp"], [5, 1, 1, "", "replace_null_list"]], "polars_shapely_function": [[6, 1, 1, "", "add_buffer"], [6, 1, 1, "", "calculate_line_length"], [6, 1, 1, "", "combine_shape"], [6, 1, 1, "", "force_linestring_direction_col"], [6, 1, 1, "", "generate_linestring_from_coordinates_list"], [6, 1, 1, "", "generate_linestring_from_nearest_points_col"], [6, 1, 1, "", "generate_point_from_coordinates"], [6, 1, 1, "", "geoalchemy2_to_shape_col"], [6, 1, 1, "", "geoalchemy2_to_wkt_col"], [6, 1, 1, "", "geojson_to_wkt_col"], [6, 1, 1, "", "get_coordinates_col"], [6, 1, 1, "", "get_coordinates_list_from_col"], [6, 1, 1, "", "get_geometry_difference"], [6, 1, 1, "", "get_geometry_list"], [6, 1, 1, "", "get_linestring_boundaries_col"], [6, 1, 1, "", "get_linestring_from_point_list"], [6, 1, 1, "", "get_linestring_list_boundary_intersection_col"], [6, 1, 1, "", "get_multigeometry_from_col"], [6, 1, 1, "", "get_multilinestring_from_wkt_list_col"], [6, 1, 1, "", "get_multipoint_from_wkt_list_col"], [6, 1, 1, "", "get_nearest_point_within_distance_col"], [6, 1, 1, "", "get_point_list_centroid_col"], [6, 1, 1, "", "get_polygon_centroid_col"], [6, 1, 1, "", "linestring_is_ring_col"], [6, 1, 1, "", "linestring_splitter_col"], [6, 1, 1, "", "merge_linestring_list"], [6, 1, 1, "", "move_geometry_col"], [6, 1, 1, "", "retrograde_multigeometry"], [6, 1, 1, "", "shape_coordinate_transformer_col"], [6, 1, 1, "", "shape_intersect_polygon"], [6, 1, 1, "", "shape_intersect_shape_col"], [6, 1, 1, "", "shape_to_geoalchemy2_col"], [6, 1, 1, "", "shape_to_wkt_col"], [6, 1, 1, "", "simplify_linestring_col"], [6, 1, 1, "", "simplify_multilinestring_col"], [6, 1, 1, "", "wkt_to_geoalchemy_col"], [6, 1, 1, "", "wkt_to_shape_col"]], "shapely_function": [[7, 1, 1, "", "explode_multipolygon"], [7, 1, 1, "", "find_closest_node_from_list"], [7, 1, 1, "", "force_linestring_direction"], [7, 1, 1, "", "generate_valid_polygon"], [7, 1, 1, "", "geoalchemy2_to_shape"], [7, 1, 1, "", "get_closest_point_from_multi_point"], [7, 1, 1, "", "get_geometry_list_intersection"], [7, 1, 1, "", "get_multilinestring_from_wkt_list"], [7, 1, 1, "", "get_multipoint_from_wkt_list"], [7, 1, 1, "", "get_multipolygon_from_wkt_list"], [7, 1, 1, "", "get_nearest_point_within_distance"], [7, 1, 1, "", "get_point_list_centroid"], [7, 1, 1, "", "get_point_side"], [7, 1, 1, "", "get_polygon_multipoint_intersection"], [7, 1, 1, "", "get_valid_polygon_str"], [7, 1, 1, "", "grid_bounds"], [7, 1, 1, "", "linestring_splitter"], [7, 1, 1, "", "load_shape_from_geo_json"], [7, 1, 1, "", "merge_multilinestring_creating_missing_segments"], [7, 1, 1, "", "move_geometry"], [7, 1, 1, "", "multipoint_from_multilinestring"], [7, 1, 1, "", "partition"], [7, 1, 1, "", "point_list_to_linestring"], [7, 1, 1, "", "remove_linestring_circle_from_multilinestring"], [7, 1, 1, "", "remove_z_coordinates"], [7, 1, 1, "", "segment_list_from_multilinestring"], [7, 1, 1, "", "shape_coordinate_transformer"], [7, 1, 1, "", "shape_list_to_wkt_list"], [7, 1, 1, "", "shape_to_geoalchemy2"], [7, 1, 1, "", "simplify_linestring"], [7, 1, 1, "", "simplify_multilinestring"], [7, 1, 1, "", "wkt_list_to_shape_list"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:function"}, "terms": {"": [3, 5], "0": 6, "1": [0, 3, 5, 6, 7], "10": [0, 6], "100": 7, "2": [0, 3, 5, 6], "20": 0, "2056": 0, "3": [0, 3, 5, 6], "30": 0, "4": [0, 5, 6], "4326": 7, "5": 0, "6": 0, "7": 5, "A": [3, 5, 6, 7], "As": 0, "If": [0, 3, 5, 6, 7], "It": 0, "The": [0, 3, 4, 5, 6, 7], "accord": 0, "ad": [0, 3, 5], "add": 6, "add_buff": [2, 6], "added_str": [0, 5], "addit": 6, "admitt": 5, "after": [5, 6], "against": 7, "algorithm": 3, "alia": [5, 6], "all": 3, "along": 3, "alreadi": 0, "an": [0, 3, 5, 6], "angl": 6, "ani": 5, "anoth": [6, 7], "appli": 5, "ar": [0, 3, 5, 7], "archiv": 0, "arrai": 4, "assign": 5, "associ": 5, "assum": 0, "attribut": 3, "auxiliari": 0, "axi": 5, "b": 3, "base": [0, 5, 7], "base_uuid": [0, 5], "base_valu": 0, "begin": 7, "between": [3, 5, 6, 7], "bf": 3, "bool": [0, 5, 6], "boolean": [5, 6], "bound": 7, "boundari": [4, 5, 6, 7], "break": 3, "buffer": 6, "buffer_s": 6, "build": [0, 3], "build_non_existing_dir": [0, 2], "c": [3, 6], "cach": 0, "calcul": [4, 5, 6, 7], "calculate_line_length": [2, 6], "camel_str": 0, "camel_to_snak": [0, 2], "camelcas": 0, "cast": 5, "cast_boolean": [2, 5], "cast_float": [2, 5], "cast_to_utc_timestamp": [2, 5], "cell": 7, "centroid": [6, 7], "check": [5, 6, 7], "circl": 7, "circuit": 5, "circular": 7, "client": 0, "close": 6, "closest": 7, "col": [5, 6], "col_list": 5, "col_nam": 6, "cols_nam": 5, "column": [0, 3, 5, 6], "combin": 6, "combine_shap": [2, 6], "comma": 0, "compon": 5, "concat_list_of_list": [2, 5], "concaten": 5, "conduct": 5, "connect": 3, "consecut": 3, "contain": [0, 3, 5, 6, 7], "convert": [0, 5, 6, 7], "convert_list_to_str": [0, 2], "convert_to_utc": 5, "coord_list": 6, "coordin": [6, 7], "copper": 5, "copper_loss": 5, "could": 0, "count": 5, "cr": [6, 7], "creat": [0, 3, 6, 7], "cum_count": 5, "cum_count_dupl": [2, 5], "cumul": 5, "current": 5, "d": 3, "data": [0, 3, 5, 6, 7], "data_nam": 3, "datafram": [0, 3, 5, 6], "date": 5, "date_str": 5, "datetim": 5, "default": [0, 3, 5, 6, 7], "default_d": 5, "default_valu": 5, "defin": 3, "delta": 7, "determin": 7, "df": [0, 5, 6], "dict": [0, 3, 5, 7], "dict_to_duckdb": [0, 2], "dict_to_gpkg": [0, 2], "dictionari": [0, 3, 5, 7], "dictionary_key_filt": [0, 2], "diff_geom": 6, "differ": 6, "digit": 5, "digitize_col": [2, 5], "digraph": 3, "dijkstra": 3, "direct": [3, 6, 7], "directori": 0, "discret": 5, "distanc": [6, 7], "divid": 3, "doe": [0, 5], "done": 0, "down": 3, "download": 0, "download_anywai": 0, "download_from_switch": [0, 2], "duckdb": 0, "duckdb_to_dict": [0, 2], "duplic": 5, "each": [3, 6], "edg": 3, "edge_data": 3, "element": 5, "end": [3, 6, 7], "endpoint": 3, "ensur": 3, "error": 4, "error_within_boundari": [2, 4], "europ": 5, "even": 0, "everi": 3, "exactli": 0, "exampl": [0, 3], "exclud": 5, "exist": 0, "explod": 7, "explode_multipolygon": [2, 7], "expr": [3, 5, 6, 7], "express": [3, 5, 6, 7], "extens": 0, "extract": [0, 6, 7], "extract_arch": [0, 2], "extracted_fold": 0, "fail": 7, "fals": [0, 5, 6], "file": [0, 7], "file_nam": [0, 7], "file_path": 0, "filenotfounderror": 7, "filter": [0, 7], "find": [3, 6, 7], "find_closest_node_from_list": [2, 7], "first": [0, 6], "first_point_str": [6, 7], "float": [3, 5, 6, 7], "float_str": 5, "folder": 0, "folder_nam": 0, "forc": 0, "force_extract": 0, "force_linestring_direct": [2, 7], "force_linestring_direction_col": [2, 6], "forced_weight": 3, "form": 6, "format": [0, 5, 6, 7], "format_str": [0, 5], "found": 7, "from": [0, 3, 5, 6, 7], "from_point": [6, 7], "from_point_str": 7, "function": [0, 5, 7], "gb": 3, "gener": [0, 3, 5, 6, 7], "general_funct": [1, 2], "generate_and_connect_segment_from_linestring_list": [2, 3], "generate_bfs_tree_with_edge_data": [2, 3], "generate_linestring_from_coordinates_list": [2, 6], "generate_linestring_from_nearest_points_col": [2, 6], "generate_log": [0, 2], "generate_nx_edg": [2, 3], "generate_point_from_coordin": [2, 6], "generate_random_uuid": [2, 5], "generate_shortest_path_length_matrix": [2, 3], "generate_tree_graph_from_edge_data": [2, 3], "generate_uuid": [0, 2], "generate_uuid_col": [2, 5], "generate_valid_polygon": [2, 7], "geo": [6, 7], "geo_str": [6, 7], "geoalchemy2": [6, 7], "geoalchemy2_to_shap": [2, 7], "geoalchemy2_to_shape_col": [2, 6], "geoalchemy2_to_wkt_col": [2, 6], "geojson": [6, 7], "geojson_to_wkt_col": [2, 6], "geom": 7, "geometr": 6, "geometri": [6, 7], "geometry_list": 7, "geometry_list_str": 6, "geometry_str": 7, "geopackag": 0, "get": [3, 5, 6, 7], "get_all_edge_data": [2, 3], "get_closest_point_from_multi_point": [2, 7], "get_connected_edges_data": [2, 3], "get_coordinates_col": [2, 6], "get_coordinates_list_from_col": [2, 6], "get_edge_data_from_node_list": [2, 3], "get_edge_data_from_path": [2, 3], "get_edge_data_list": [2, 3], "get_edge_param_from_node_list": [2, 3], "get_geometry_differ": [2, 6], "get_geometry_list": [2, 6], "get_geometry_list_intersect": [2, 7], "get_linestring_boundaries_col": [2, 6], "get_linestring_from_point_list": [2, 6], "get_linestring_list_boundary_intersection_col": [2, 6], "get_meta_data_str": [2, 5], "get_multigeometry_from_col": [2, 6], "get_multilinestring_from_wkt_list": [2, 7], "get_multilinestring_from_wkt_list_col": [2, 6], "get_multipoint_from_wkt_list": [2, 7], "get_multipoint_from_wkt_list_col": [2, 6], "get_multipolygon_from_wkt_list": [2, 7], "get_nearest_point_within_dist": [2, 7], "get_nearest_point_within_distance_col": [2, 6], "get_node_neighbor_edge_data": [2, 3], "get_point_list_centroid": [2, 7], "get_point_list_centroid_col": [2, 6], "get_point_sid": [2, 7], "get_polygon_centroid_col": [2, 6], "get_polygon_multipoint_intersect": [2, 7], "get_shortest_path_between_col": [2, 3], "get_shortest_path_dijkstra_col_from_multisourc": [2, 3], "get_shortest_path_dijkstra_from_multisourc": [2, 3], "get_shortest_path_edge_data": [2, 3], "get_transfo_admitt": [2, 5], "get_transfo_conduct": [2, 5], "get_transfo_imaginary_compon": [2, 5], "get_transfo_imped": [2, 5], "get_transfo_resist": [2, 5], "get_valid_polygon_str": [2, 7], "given": [0, 5, 6, 7], "gpkg_file_nam": 0, "gps_srid": 7, "graph": 3, "graph_id": 3, "graphbla": 3, "grid": [3, 7], "grid_bound": [2, 7], "group": 3, "half": 5, "have": [0, 5], "high": 4, "i": [0, 3, 5, 6, 7], "i64": 5, "id": [3, 5, 7], "identifi": [5, 6, 7], "imaginari": 5, "imped": 5, "import": [0, 3], "includ": 3, "indic": [5, 6], "individu": 3, "info": 0, "inform": 7, "initi": [0, 5], "initial_time_zon": 5, "initialize_output_fil": [0, 2], "input": [0, 3, 5], "int": [0, 3, 5, 6, 7], "interpol": 5, "intersect": [6, 7], "invalid": 3, "iron": 5, "iron_loss": 5, "is_r": 6, "item": 5, "its": [3, 7], "join": [0, 5], "json": 5, "keep": [0, 5], "keep_only_duplicated_list": [2, 5], "keep_only_first_unique_list": [2, 5], "keep_string_format": 5, "kei": [0, 5, 7], "key_list": 0, "layer": 0, "layer_nam": 0, "length": [3, 6, 7], "level": 0, "line": [6, 7], "line_merg": 7, "line_str": 6, "linear": 5, "linear_interpolation_for_bound": [2, 5], "linear_interpolation_using_col": [2, 5], "linestr": [3, 6, 7], "linestring_is_ring_col": [2, 6], "linestring_list": [3, 6, 7], "linestring_splitt": [2, 7], "linestring_splitter_col": [2, 6], "linestring_str": [6, 7], "link": 0, "list": [0, 3, 5, 6, 7], "list_col": 5, "list_data": 0, "list_to_list_of_tupl": [2, 5], "load": [0, 7], "load_shape_from_geo_json": [2, 7], "local": 0, "local_folder_path": 0, "log": 0, "log_level": 0, "logger": 0, "loss": 5, "low": 4, "lower": 4, "map": 7, "mater": 5, "matrix": 3, "max": 5, "max_dist": 7, "maximum": [5, 7], "mean": 5, "measur": 5, "merg": [6, 7], "merge_linestring_list": [2, 6], "merge_multilinestring_creating_missing_seg": [2, 7], "metadata": 5, "min": 5, "min_dist": [6, 7], "minimum": [5, 6, 7], "miss": 7, "ml": 7, "modif": 5, "modifi": [0, 5], "modify_str": [0, 2], "modify_string_col": [2, 5], "modul": 5, "move_geometri": [2, 7], "move_geometry_col": [2, 6], "multi_linestr": 7, "multi_point": [6, 7], "multigeometri": 6, "multilinestr": [6, 7], "multilinestring_str": 7, "multipl": 6, "multipoint": [6, 7], "multipoint_from_multilinestr": [2, 7], "multipolygon": [6, 7], "multipolygon_str": 7, "must": 0, "name": [0, 3, 5, 6], "nb_split": [6, 7], "nb_state": 5, "nearest": [6, 7], "nearest_point": 6, "necessari": [0, 7], "need": [3, 5], "neg": 5, "neighbor": 3, "networkx": 3, "networkx_funct": [1, 2], "new": 6, "node": [3, 6, 7], "node_list": 3, "node_list_nam": 7, "node_nam": 7, "non": 0, "none": [0, 3, 5, 6, 7], "np": 4, "null": [0, 5], "number": [5, 6, 7], "numpy_funct": [1, 2], "nx": 3, "nx_graph": 3, "nx_grid": 3, "object": [3, 5, 6, 7], "oc": 0, "oc_current_ratio": 5, "ohm": 5, "one": [6, 7], "onli": [6, 7], "open": 5, "oper": 6, "option": [0, 3, 5, 6, 7], "order": 0, "origin": 6, "other": 5, "out": 7, "output": 0, "owncloud": 0, "pair": 3, "param": [5, 6, 7], "paramet": [0, 3, 4, 5, 6, 7], "pars": 5, "parse_d": [2, 5], "parse_timestamp": [2, 5], "part": 5, "partit": [2, 7], "password": 0, "path": [0, 3, 6, 7], "perform": 5, "pipe": 6, "pl": [0, 3, 5, 6, 7], "pl_to_dict": [0, 2], "pl_to_dict_with_tupl": [0, 2], "point": [3, 6, 7], "point_list": [6, 7], "point_list_str": [6, 7], "point_list_to_linestr": [2, 7], "polar": [0, 3, 5, 6, 7], "polars_funct": [1, 2], "polars_shapely_funct": [1, 2], "polygon": [6, 7], "polygon_list": 7, "polygon_str": 7, "posit": 5, "power": 5, "predefin": 5, "preserv": 3, "print": 3, "process": [3, 6, 7], "provid": [6, 7], "public": 0, "rais": [0, 3, 5, 6, 7], "random": 5, "rate": 5, "rated_": 5, "rated_v": 5, "ratio": 5, "real": 5, "recogn": 5, "refer": [6, 7], "regex": 0, "rel": 4, "relative_error_within_boundari": [2, 4], "remain": 7, "remov": [0, 7], "remove_linestring_circle_from_multilinestr": [2, 7], "remove_z_coordin": [2, 7], "replac": [0, 5], "replace_null_list": [2, 5], "repres": [3, 5, 6, 7], "represent": [0, 6, 7], "resist": 5, "result": [3, 6, 7], "retain": 3, "retriev": 3, "retrograde_multigeometri": [2, 6], "return": [0, 3, 4, 5, 6, 7], "right": [6, 7], "ring": [6, 7], "row": [3, 5], "same": [6, 7], "save": 0, "scan": 0, "scan_fold": [0, 2], "scan_switch_directori": [0, 2], "search": [3, 6, 7], "second": 0, "secondari": 5, "segment": [3, 6, 7], "segment_list_from_multilinestr": [2, 7], "self": [6, 7], "sens": 3, "separ": 0, "serv": 3, "server": 0, "shape": [5, 6, 7], "shape_col": 6, "shape_coordinate_transform": [2, 7], "shape_coordinate_transformer_col": [2, 6], "shape_intersect_polygon": [2, 6], "shape_intersect_shape_col": [2, 6], "shape_list": 7, "shape_list_to_wkt_list": [2, 7], "shape_str": 7, "shape_to_geoalchemy2": [2, 7], "shape_to_geoalchemy2_col": [2, 6], "shape_to_wkt_col": [2, 6], "shapely_funct": [1, 2], "short": 5, "shortest": 3, "show": 5, "side": [5, 7], "simen": 5, "simplifi": [6, 7], "simplify_linestr": [2, 7], "simplify_linestring_col": [2, 6], "simplify_multilinestr": [2, 7], "simplify_multilinestring_col": [2, 6], "singl": [0, 6, 7], "size": [6, 7], "slack": 3, "slack_node_id": 3, "smaller": 7, "smallest": 3, "snake_cas": 0, "snake_str": 0, "snake_to_camel": [0, 2], "sort": 5, "sourc": [0, 3, 4, 5, 6, 7], "source_col": 3, "spatial": [6, 7], "specifi": [0, 3, 4, 5, 6, 7], "split": [6, 7], "srid": [0, 7], "srid_from": [6, 7], "srid_to": [6, 7], "start": [3, 6, 7], "state": 5, "store": 3, "str": [0, 3, 5, 6, 7], "str_list": 7, "strict": 5, "string": [0, 5, 6, 7], "string_col": 5, "subgraph": 3, "sublist": 5, "substr": 0, "subtract": 6, "successfulli": 0, "support": 0, "swiss_srid": 0, "switch": 0, "switch_folder_path": 0, "switch_link": 0, "switch_pass": 0, "system": [6, 7], "tabl": 0, "table_to_gpkg": [0, 2], "target": [3, 6, 7], "target_col": 3, "test": 5, "thei": 0, "thi": 5, "those": 7, "time": 5, "timestamp": 5, "timestamp_str": 5, "to_point": [6, 7], "to_point_str": 7, "togeth": 3, "transform": [5, 6, 7], "tree": 3, "tree_graph": 3, "true": [0, 3, 5, 6], "tupl": [0, 5, 6], "two": [0, 3, 6], "type": [0, 3, 4, 5, 6, 7], "u_of_edg": 3, "underscor": 5, "union": [0, 3, 5, 6, 7], "uniqu": [0, 5, 7], "unitari": 3, "upper": 4, "us": [3, 5, 7], "utc": 5, "uuid": [0, 5], "v_of_edg": 3, "va": 5, "valid": 7, "valu": [0, 3, 4, 5, 6], "valueerror": [0, 3, 5, 6, 7], "voltag": 5, "voltage_ratio": 5, "w": 5, "weight": 3, "weight_nam": 3, "were": 0, "when": 5, "where": [0, 3, 5], "whether": [0, 5, 6], "which": [5, 7], "while": 3, "whose": 3, "with_column": [5, 6], "within": [4, 6, 7], "without": 7, "wkbelement": 7, "wkt": [6, 7], "wkt_list_to_shape_list": [2, 7], "wkt_to_geoalchemy_col": [2, 6], "wkt_to_shape_col": [2, 6], "x": [4, 5, 6], "x_col": 5, "y": [5, 6], "y_col": 5, "z": 7, "zone": 5, "zurich": 5}, "titles": ["general_function", "IE Utility Functions documentation", "Utility Functions documentation", "networkx_function", "numpy_function", "polars_function", "polars_shapely_function", "shapely_function"], "titleterms": {"content": 1, "document": [1, 2], "exampl": [5, 6], "function": [1, 2], "general_funct": 0, "ie": 1, "networkx_funct": 3, "numpy_funct": 4, "polars_funct": 5, "polars_shapely_funct": 6, "shapely_funct": 7, "util": [1, 2]}})